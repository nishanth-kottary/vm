# Test if an input number if prime 

# global variables 
:input 0
:divisor 2

__CODE__

READ                       # read a decimal number.
PUSH input                 # store it in input label.
PUT

PUSH input                 # Special cases.
GET
PUSH 2                     # if 2 then prime.
EQU
jumpif prime
GRT                        # If less than 2 then not prime.
jumpif not_prime

:start
PUSH divisor
GET
PUSH input
GET
DIV
POP                        # Discard the quotient.
PUSH 0                     # Check if remainder is 0.
EQU                         
POP POP                    # clear the stack
jumpif not_prime            

PUSH divisor            # Add 1 to the divisor
GET
PUSH 1
ADD
PUSH divisor
PUT

PUSH divisor
GET
PUSH input                 # If divisor is not equal to input
GET
EQU                        # continue loop.
POP POP                    # clear the stack.
jumpun start

:prime
PUSH 0
PUSH 'e'
PUSH 'm'
PUSH 'i'
PUSH 'r'
PUSH 'p'
jump print

:not_prime
PUSH 0
PUSH 'e'
PUSH 'm'
PUSH 'i'
PUSH 'r'
PUSH 'p'
PUSH 32
PUSH 't'
PUSH 'o'
PUSH 'n'
jump print

:print                   # WRTC till TOS is not zero
PUSH 0
EQU
jumpif end
POP
WRTC
jump print

:end
END
